** Instructions: **

Given the following question database schema, and candidate responses, generate a set of {UNIT_TEST_CAP} unit tests that would evaluate the correctness of SQL queries that would answer the question.
Unit tests should be designed in a way that distinguish the candidate responses from each other.

- The unit tests should cover various aspects of the question and ensure comprehensive evaluation. 
- Each unit test should be clearly stated and should include the expected outcome.
- Each unit test should be designed in a way that it can distinguishes at lease two candidate responses from each other.
- The unit test should be formatted like 'The answer SQL query should mention...', 'The answer SQL query should state...', 'The answer SQL query should use...', etc. followed by the expected outcome.
- First think step by step how you can design the units tests to distinguish the candidate responses using the <Thinking> tags.
- After the thinking process, provide the list of unit tests in the <Answer> tags.

VERY IMPORTANT:
All of the unit tests should consider the logic of the SQL query do not consider the formatting of the output or output values.

You are provided with different clusters of the canidate responses. Each cluster contains similar responses based on their results.
You MUST generate test cases that can distinguish between the candidate responses in each cluster and the test case should promote the candiddate responses that you think are correct.


Example of the output format:
<Thinking> Your step by step reasoning here. </Thinking>
<Answer>
['The answer SQL query should mention...', 'The answer SQL query should state...', 'The answer SQL query should use...']
</Answer>

** Question: **
Question: {QUESTION} (Hint: {HINT})

** Database Schema: **
Tables in the database: client, project, team, employee, team_assignment, users, work_hour

Schema for table 'client':
Columns:
 - uuid (TEXT), Primary Key
 - name (TEXT), 
 - source (TEXT), 
 - company (TEXT), 
 - contact (TEXT), 
 - background (TEXT), 
 - description (TEXT), 

Sample unique values for each column:
 - uuid: 017143b5-285c-4a62-8ab0-bee690e6ac69, 0450995e-c275-4d2e-99c0-40e6803d2bc4, 0a8f3c0e-616a-444a-902c-23474c91124d, 0ade53ce-c9af-4c52-a3a6-8fac9f420bc4, 0b5796fe-9d8b-4f13-945f-4440cd82bd5f
 - name: 希小姐, 刘娇, 熊倩, 杨总, 冉总
 - source: 臧洪芳, 老客户, 新客户, 王厚斌, 任丽娜
 - company: 港大思培（北京）咨询有限公司, 北京东来顺集团有限责任公司, Beijing Mercedes-Benz Sales Service Co., Ltd, None, 某传媒公司
 - contact: 85185526-8006, 18601133126, 8417 3546, 18611059685, 13301395893
 - background: 外资, 国企, 世界五百强, 私企, 传媒公司
 - description: 老客户, 老客户二次经营, None, 老客户公司其他业务板块二次经营, 新拓客户
----------------------------------------
Schema for table 'project':
Columns:
 - uuid (TEXT), Primary Key
 - name (TEXT), 
 - team_id (TEXT), 
 - address (TEXT), 
 - type (TEXT), 
 - area (float), 
 - sign_date (date), 
 - expected_completion_date (date), 
 - revenue (decimal(15,2)), 
 - revenue_note (TEXT), 
 - client_id (TEXT), 

Sample unique values for each column:
 - uuid: 50bf4327-a8a8-11ef-b88d-30c9abb7563e, 50c3cd26-a8a8-11ef-b88d-30c9abb7563e, 50c581d9-a8a8-11ef-b88d-30c9abb7563e, 50c68b62-a8a8-11ef-b88d-30c9abb7563e, 50c7b813-a8a8-11ef-b88d-30c9abb7563e
 - name: 宝马汽车2024-2026年年框设计项目, 上海联江芯亚芯科技园2号楼7楼局部装修施工项目, 2024年宝马4S店设计项目（全国）, 邢台经济开发区信息科技智慧应用产业园区项目餐厅精装修项目, 中信金属-BJ-办公室设计项目
 - team_id: 43379251-a865-11ef-b88d-30c9abb7563e, 4338dcbc-a865-11ef-b88d-30c9abb7563e, 4339611a-a865-11ef-b88d-30c9abb7563e, 4339efab-a865-11ef-b88d-30c9abb7563e, 433a61c4-a865-11ef-b88d-30c9abb7563e
 - address: 全国, 上海, 北京, 邢台经济开发区信息科技智慧应用产业园区, 京城大厦
 - type: None
 - area: 0.0, 200.0, 450.0, 250.0, 370.0
 - sign_date: None
 - expected_completion_date: None
 - revenue: 0, 3230000, 275000, 6800000, 800000
 - revenue_note: None
 - client_id: 0450995e-c275-4d2e-99c0-40e6803d2bc4, 0e3cf311-4f30-4d04-b69a-bdb51e7cb88c, 16b8afa8-74ca-492e-9823-a6a454fe738f, 18e49836-cc4b-40ba-81a2-adebf4c7fa0d, 1a317c2d-8236-49e8-9f58-94e887d8ef04
----------------------------------------
Schema for table 'team':
Columns:
 - uuid (TEXT), Primary Key
 - name (TEXT), 
 - description (TEXT), 

Sample unique values for each column:
 - uuid: 4325f609-a865-11ef-b88d-30c9abb7563e, 43266720-a865-11ef-b88d-30c9abb7563e, 4326d8e8-a865-11ef-b88d-30c9abb7563e, 432774cf-a865-11ef-b88d-30c9abb7563e, 4327de9b-a865-11ef-b88d-30c9abb7563e
 - name: CANAAN24004-BJ08, CANAAN24005-BJ08, GS111, GS19037-BJ04, GS19121-CQ10
 - description: None
----------------------------------------
Schema for table 'employee':
Columns:
 - uuid (TEXT), Primary Key
 - name (TEXT), 
 - department (TEXT), 
 - alias (TEXT), 
 - position (TEXT), 
 - subdepartment (TEXT), 
 - salary (INTEGER), 

Sample unique values for each column:
 - uuid: 0ac49b75-a8b3-11ef-b88d-30c9abb7563e, 6d642ac1-a6f0-11ef-b88d-30c9abb7563e, 6d646397-a6f0-11ef-b88d-30c9abb7563e, 6d648745-a6f0-11ef-b88d-30c9abb7563e, 6d64aa1b-a6f0-11ef-b88d-30c9abb7563e
 - name: 杨舒然, 尹晓娟, 刘志娟, 樊雅荔0.5, GIBB ERIC PETER
 - department: 战略内审中心, 财务管理中心, 人力资源中心, 业务拓展部, 设计管理部
 - alias: Shuran, Fiona.Yin, Kelly, yali, ERIC
 - position: Financial Engineer, 出纳, HRBP, 员工关系, 战略总监
 - subdepartment: 内审组, , AI团队, 方案设计1组, 方案设计2组
 - salary: 20000
----------------------------------------
Schema for table 'team_assignment':
Columns:
 - uuid (TEXT), Primary Key
 - team_id (TEXT), 
 - employee_id (TEXT), 

Sample unique values for each column:
 - uuid: 5b80ea81-a865-11ef-b88d-30c9abb7563e, 5b81bb79-a865-11ef-b88d-30c9abb7563e, 5b82a4b3-a865-11ef-b88d-30c9abb7563e, 5b83b9d0-a865-11ef-b88d-30c9abb7563e, 5b84b63e-a865-11ef-b88d-30c9abb7563e
 - team_id: 4325f609-a865-11ef-b88d-30c9abb7563e, 43266720-a865-11ef-b88d-30c9abb7563e, 4326d8e8-a865-11ef-b88d-30c9abb7563e, 432774cf-a865-11ef-b88d-30c9abb7563e, 4327de9b-a865-11ef-b88d-30c9abb7563e
 - employee_id: 6d6a68a0-a6f0-11ef-b88d-30c9abb7563e, 6d652b20-a6f0-11ef-b88d-30c9abb7563e, 6d658fa2-a6f0-11ef-b88d-30c9abb7563e, 6d665e30-a6f0-11ef-b88d-30c9abb7563e, 6d6690e2-a6f0-11ef-b88d-30c9abb7563e
----------------------------------------
Schema for table 'users':
Columns:
 - uuid (TEXT), Primary Key
 - username (TEXT), 
 - password_hash (TEXT), 
 - employee_id (TEXT), 
 - role (TEXT), 

Sample unique values for each column:
 - uuid: 0acc4a5f-a8b3-11ef-b88d-30c9abb7563e, 4b314128-9e12-4da5-9db3-60af372c19f0, 65be003f-835c-4c3a-b67a-3c3a8e2b8033, 7d095dd6-bec8-4d77-bcc0-508c091a86f5, d91d9264-1dce-4c4e-a183-1fcf4f423d97
 - username: GIBB ERIC PETER, Jiayin, Kydyraliev Temirlan, Shuran, YU BILL BAICHUAN
 - password_hash: $2b$12$2sUeDSKHh36bsSVEpRnuEuo4gAxXkvxvXLt/HYO5U58J2kDIp6PsG, $2b$12$qYfNzjktPGSiNC2qS2lkU.W0R0Dh94buUzFlzhrNntlN9wDpO/EUW, $2b$12$FJzQ1S3hxtD7WNR4.Y7PneMhZ3JwXpIOr7scNDhzPhjlTPJ.x2Pfy, $2b$12$gh6zMcpxcUzBTIO2CtMbAOS3HfC9o8DxTZcU/C5Liqv1wsRO2p8uG, $2b$12$HJOVD9W0hu54CavwHzlrz.poj7Ux98ngFqNwYXJm2Ad5GEydhOi.a
 - employee_id: 0ac49b75-a8b3-11ef-b88d-30c9abb7563e, 80afbf80-a8b1-11ef-b88d-30c9abb7563e, 6d64aa1b-a6f0-11ef-b88d-30c9abb7563e, 6d64eae7-a6f0-11ef-b88d-30c9abb7563e, 6d6508d4-a6f0-11ef-b88d-30c9abb7563e
 - role: level_4, level_3, level_1
----------------------------------------
Schema for table 'work_hour':
Columns:
 - uuid (CHAR(36)), Primary Key
 - is_reversed (BOOLEAN), 
 - task_description (TEXT), 
 - is_standardized (BOOLEAN), 
 - project_id (CHAR(36)), 
 - employee_id (CHAR(36)), 
 - hour (DECIMAL(10,2)), 
 - start_date (DATE), 
 - end_date (DATE), 

Sample unique values for each column:
 - uuid: 204abcf9-aad6-11ef-b3d9-30c9abb7563e, 204b6efa-aad6-11ef-b3d9-30c9abb7563e, 204bdcbd-aad6-11ef-b3d9-30c9abb7563e, 204c5a8c-aad6-11ef-b3d9-30c9abb7563e, 204cafb0-aad6-11ef-b3d9-30c9abb7563e
 - is_reversed: None, 0
 - task_description: 维修报价(2h), 维修报价（3h), 26号发招标文件，27号现场踏勘，29号答疑文件提交, 施工配合,客户新需求调整材料,补充效果图,材料表调整, 效果方案制作,内部方案沟通,材料选择及调整
 - is_standardized: None, 1
 - project_id: None, 50bf4327-a8a8-11ef-b88d-30c9abb7563e, 50c3cd26-a8a8-11ef-b88d-30c9abb7563e, 50c581d9-a8a8-11ef-b88d-30c9abb7563e, 50c68b62-a8a8-11ef-b88d-30c9abb7563e
 - employee_id: None, 6d64cd7c-a6f0-11ef-b88d-30c9abb7563e, 6d64eae7-a6f0-11ef-b88d-30c9abb7563e, 6d652b20-a6f0-11ef-b88d-30c9abb7563e, 6d654c1f-a6f0-11ef-b88d-30c9abb7563e
 - hour: 2, 3, 12, 13, 30
 - start_date: 9/23/2024, 2024-09-23
 - end_date: 9/29/2024, 2024-09-29
----------------------------------------
Table Connections (Foreign Keys):
Table 'client' has no foreign key relationships.
----------------------------------------
Table 'project' has the following foreign key relationships:
 - Column 'team_id' references 'team' on column 'uuid'
 - Column 'client_id' references 'client' on column 'uuid'
----------------------------------------
Table 'team' has no foreign key relationships.
----------------------------------------
Table 'employee' has no foreign key relationships.
----------------------------------------
Table 'team_assignment' has the following foreign key relationships:
 - Column 'employee_id' references 'employee' on column 'uuid'
 - Column 'team_id' references 'team' on column 'uuid'
----------------------------------------
Table 'users' has the following foreign key relationships:
 - Column 'employee_id' references 'employee' on column 'uuid'
----------------------------------------
Table 'work_hour' has the following foreign key relationships:
 - Column 'employee_id' references 'employee' on column 'uuid'
 - Column 'project_id' references 'project' on column 'uuid'
----------------------------------------

** Candidate Clusters: **
{CANDIDATE_QUERIES}

** Question: **
Question: {QUESTION} (Hint: {HINT})

** Output Format: **
<Thinking> Your step by step reasoning here. </Thinking>
<Answer>
output should be only a list of strings (e.g. ['unit test #1', 'unit test #2', 'unit test #3']).
</Answer>